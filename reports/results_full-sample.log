Traceback (most recent call last):
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/haoting/.pyenv/versions/3.7.14/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/haoting/.virtualenvs/fmriprep-denoise-benchmark/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from statsmodels.stats.weightstats import ttest_ind

for_plotting = {}

datasets = ['ds000228', 'ds000030']
baseline_groups = ['adult', 'control']
for dataset, baseline_group in zip(datasets, baseline_groups):
    _, data, groups = tables.get_descriptive_data(dataset, path_root)
    baseline = data[data['groups'] == baseline_group]
    for group in group_order[dataset]:
        compare = data[data['groups'] == group]
        glue(
            f'{dataset}_{group}_mean',
            compare['mean_framewise_displacement'].mean(),
        )
        glue(
            f'{dataset}_{group}_sd',
            compare['mean_framewise_displacement'].std(),
        )
        glue(
            f'{dataset}_{group}_n',
            compare.shape[0],
        )
        if group != baseline_group:
            t_stats, pval, df = ttest_ind(
                baseline['mean_framewise_displacement'],
                compare['mean_framewise_displacement'],
                usevar='unequal',
            )
            glue(f'{dataset}_t_{group}', t_stats)
            glue(f'{dataset}_p_{group}', pval)
            glue(f'{dataset}_df_{group}', df)
    for_plotting.update({dataset: data})
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_14394/4215049233.py[0m in [0;36m<module>[0;34m[0m
[1;32m      6[0m [0mbaseline_groups[0m [0;34m=[0m [0;34m[[0m[0;34m'adult'[0m[0;34m,[0m [0;34m'control'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m [0;32mfor[0m [0mdataset[0m[0;34m,[0m [0mbaseline_group[0m [0;32min[0m [0mzip[0m[0;34m([0m[0mdatasets[0m[0;34m,[0m [0mbaseline_groups[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 8[0;31m     [0m_[0m[0;34m,[0m [0mdata[0m[0;34m,[0m [0mgroups[0m [0;34m=[0m [0mtables[0m[0;34m.[0m[0mget_descriptive_data[0m[0;34m([0m[0mdataset[0m[0;34m,[0m [0mpath_root[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      9[0m     [0mbaseline[0m [0;34m=[0m [0mdata[0m[0;34m[[0m[0mdata[0m[0;34m[[0m[0;34m'groups'[0m[0;34m][0m [0;34m==[0m [0mbaseline_group[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     10[0m     [0;32mfor[0m [0mgroup[0m [0;32min[0m [0mgroup_order[0m[0;34m[[0m[0mdataset[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: get_descriptive_data() missing 1 required positional argument: 'path_root'
TypeError: get_descriptive_data() missing 1 required positional argument: 'path_root'

